<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EP8AABD/4AAR//wAH///wB////wf//////8=
</value>
  </data>
</root>